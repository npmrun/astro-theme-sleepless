---
import { getEntry } from 'astro:content'
const { href, articleData } = Astro.props as any

let authorData
if (articleData?.data?.author) {
    authorData = (await getEntry(
        articleData?.data?.author.collection,
        articleData?.data?.author.id,
    )) as any
}

// let AllTags: string[] = []
// if (articleData && articleData.data && articleData.data.tags) {
//     if (typeof articleData.data.tags === 'string') {
//         AllTags = [articleData.data.tags]
//     } else {
//         AllTags = [articleData.data.tags[0]]
//     }
// }

let AllCategory: string[] = []
if (articleData && articleData.data && articleData.data.category) {
    if (typeof articleData.data.category === 'string') {
        AllCategory = [articleData.data.category]
    } else {
        AllCategory = [articleData.data.category[0]]
    }
}
---

<style lang="scss">
    .img-wrapper {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 75%);
        transition: all 0.2s ease-in-out;
    }
</style>
<div
    class="article-card w-[250px] flex-shrink-0 h-[300px] group bg-white/[.6] shadow rounded-lg transition relative"
>
    <div class="absolute -top-[6px] left-0 right-0 mb-1">
        {
            AllCategory.map((item: any, index: number) => (
                <a
                    href={`/category/${item}`}
                    class={`relative max-w-full inline-block group-hover:-top-[25px] truncate delay-${
                        index * 100
                    } transition-all top-0 bg-red-400 text-white px-2 rounded-md py-1 text-sm`}
                >
                    {item}
                </a>
            ))
        }
    </div>
    <div class="h-[70%] overflow-hidden relative rounded-tl-lg rounded-tr-lg">
        {
            articleData?.data?.draft && (
                <div class="text-white bg-red-400 absolute text-center top-[4%] w-[80%] rotate-[45deg] left-[52%] z-20">
                    草稿
                </div>
            )
        }
        <a href={href}>
            <div class="w-full h-full transition img-wrapper relative bg-white">
                <img
                    class="w-full h-full object-cover group-hover:scale-125 group-hover:rotate-[10deg]  transition-transform"
                    src={articleData.data.heroImage || '/bg.png'}
                />
                <div
                    style="background: url(/mask.png);position:absolute;width:100%;height:100%;top: 0;"
                >
                </div>
                <div
                    class="absolute top-0 left-0 right-0 bottom-0 bg-black/50 opacity-0 transition-all group-hover:opacity-100 flex"
                >
                    <span
                        class="m-auto text-white text-sm text-center px-4 pt-2 line-clamp-4"
                        >{
                            articleData.data.description ||
                                '作者很懒，没有写说明'
                        }</span
                    >
                </div>
            </div>
        </a>
    </div>
    <div class="px-4 py-2">
        <a href={href}>
            <div class="truncate text-lg">{articleData.data.title}</div>
        </a>
        <div class="truncate text-xs text-gray-400 mb-1">
            {
                articleData?.data.updatedDate ? (
                    <span
                        class="updated-time"
                        date-time={articleData.data.updatedDate}
                    >
                        修改时间：
                        <span class="opacity-0">
                            {new Date(
                                articleData.data.updatedDate,
                            ).toLocaleDateString('zh-cn', {
                                year: 'numeric',
                                month: 'short',
                                day: 'numeric',
                                hour: 'numeric',
                                minute: 'numeric',
                                second: 'numeric',
                            })}
                        </span>
                    </span>
                ) : (
                    articleData?.data.pubDate && (
                        <span
                            class="pub-time"
                            date-time={articleData.data.pubDate}
                        >
                            创建时间：
                            <span class="opacity-0">
                                {new Date(
                                    articleData.data.pubDate,
                                ).toLocaleDateString('zh-cn', {
                                    year: 'numeric',
                                    month: 'short',
                                    day: 'numeric',
                                    hour: 'numeric',
                                    minute: 'numeric',
                                    second: 'numeric',
                                })}
                            </span>
                        </span>
                    )
                )
            }
        </div>
        <div class="text-sm text-gray-500 flex">
            <div class="w-0 flex-grow truncate">
                作者：{authorData?.data.name}
            </div>
            <!-- {
                AllCategory[0] && (
                    <a
                        href={`/category/${AllCategory[0]}`}
                        class="ml-2 max-w-[40%] truncate "
                        title={AllCategory[0]}
                    >
                        分类：
                        <span class="hover:text-red-400">{AllCategory[0]}</span>
                    </a>
                )
            } -->
        </div>
        <!-- <div class="text-xs pt-2 line-clamp-2 text-gray-400">
            {articleData.data.description || '作者很懒，没有写说明'}
        </div> -->
    </div>
</div>
