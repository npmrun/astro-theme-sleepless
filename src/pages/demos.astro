---
import SinglePage from '@blog/layouts/SinglePage.astro'
import { praseDemo } from '@blog/utils/demo'

const [demoes, checkedArray] = await praseDemo()

const keys = Object.keys(demoes).sort()
---

<SinglePage title="Demo" description="Demo" showTree>
    <main
        style="position:relative;display:flex;height: 100%;padding-top: 20px;"
        class="demoes"
    >
        <ul
            style="position:static;top:0px;margin-right:15px;margin-bottom:50px;overflow:auto;white-space:nowrap;text-align:right;width:200px;"
        >
            {
                keys &&
                    keys.map((v, i) => (
                        <>
                            <li style="margin-top:8px;margin-bottom:8px;cursor:pointer;font-size:14px;color:rgb(156, 163, 175);">
                                <label for={`collapsible${i}`} class="label">
                                    <span>{v}</span>
                                </label>
                                <input
                                    id={`collapsible${i}`}
                                    class="toggle"
                                    style="display:none;"
                                    checked={checkedArray.includes(v)?true:false}
                                    type="checkbox"
                                />
                                <ul
                                    style="font-size:16px;color:rgb(0, 0, 0);"
                                    class="demo"
                                >
                                    {demoes[v].map((v) => (
                                        <li
                                            data-route={v.route}
                                            class="demo-li"
                                            title={v.desc}
                                        >
                                            {v.title}
                                        </li>
                                    ))}
                                </ul>
                                <div><label for={`collapsible${i}`} class="label">
                                    <span>展开</span>
                                </label></div>
                            </li>
                        </>
                    ))
            }
            <style lang="scss">
                .label {
                    cursor: pointer;
                    user-select: none;
                }
                .toggle + .demo {
                    display: none;
                }
                .toggle + .demo + div {
                    display: block;
                }
                .toggle:checked + .demo {
                    display: block;
                }
                .toggle:checked + .demo + div {
                    display: none;
                }
            </style>
        </ul>
        <div
            style="position:relative;margin-bottom:50px;height:100%;width:0px;flex:1 1 0%;border:1px solid rgba(187, 187, 187, 0.637);border-radius: 4px;"
        >
            <iframe
                id="iframeDemo"
                style="margin-bottom:50px;"
                height="100%"
                width="100%"
                frameborder="0"
            >
            </iframe>
            <div
                style="position:absolute;top:0px;right:0px;bottom:0px;left:0px;background-color:rgb(0, 0, 0, 0.1);color:rgb(255, 255, 255);display:flex;align-items: center;justify-content:center;"
                class="loading"
            >
                暂无展示
            </div>
        </div>
        <script is:raw data-pjax>
            var iframeDemo = document.getElementById('iframeDemo')
            var liEl = document.querySelectorAll('.demoes .demo')
            var liElItem = document.querySelectorAll('.demoes .demo .demo-li')
            var loadingEl = document.querySelector('.demoes .loading')
            liEl.forEach((li) => {
                li.addEventListener('click', (evt) => {
                    liElItem.forEach((li) => {
                        li.style.color = "black"
                    })
                    evt.target.style.color="red"
                    const route = evt.target.dataset.route
                    if (route) {
                        iframeDemo.src = route
                        loadingEl.style.display = 'flex'
                        loadingEl.innerHTML = '加载中...'
                        if (iframeDemo.attachEvent) {
                            // IE
                            iframeDemo.attachEvent('onload', function () {
                                loadingEl.style.display = 'none'
                            })
                            iframeDemo.attachEvent('onerror', function () {
                                loadingEl.innerHTML = '加载出错'
                            })
                        } else {
                            // 非IE
                            iframeDemo.onload = function () {
                                loadingEl.style.display = 'none'
                            }
                            iframeDemo.onerror = function () {
                                loadingEl.innerHTML = '加载出错'
                            }
                        }
                    }
                })
            })
        </script>
    </main>
</SinglePage>
