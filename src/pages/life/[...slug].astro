---
import { getEntries, getEntry } from 'astro:content'
import SinglePage from '@blog/layouts/SinglePage.astro'
import ArticleCard from '@root/src/components/ArticleCard.astro'
import { getLifeData } from '@root/src/utils'
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const blogEntries = await getLifeData()
    return blogEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }))
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props
const { Content } = await entry.render()

let author
if (entry.data.author) {
    author = (await getEntry(entry.data.author)) as any
}

let relatedPosts
if (entry.data.relatedPosts) {
    relatedPosts = await getEntries(entry.data.relatedPosts)
}
---

<SinglePage>
    <figure
        class="relative block h-[450px] max-md:h-[250px] mb-6 rounded-lg overflow-hidden"
    >
        <img
            class="block w-full h-full object-cover brightness-75 bg-gray-200 max-lg:!object-center"
            src={entry.data.heroImage || "/bg.png"}
            style={`object-position: ${entry.data?.heroPosition ?? 'center'};`}
            alt={entry.data.title}
        />
        <div
            style="background: url(/mask.png);position:absolute;width:100%;height:100%;top: 0;"
        >
        </div>
        <figcaption
            class="absolute top-[50%] w-full left-[50%] -translate-x-[50%] -translate-y-[50%] text-white text-center px-6 py-2"
        >
            <div class="line-clamp-2 text-3xl drop-shadow-lg">
                {entry.data.title}
            </div>
            <div
                class="inline-grid mx-auto md:grid-flow-col max-lg:grid-cols-1 auto-cols-auto text-md gap-x-6 mt-1"
            >
                <p>作者: {author?.data.name}</p>
                {
                    entry?.data.category && (
                        <p>
                            <a
                                class="hover:text-red-400 cursor-pointer"
                                href={`/category`}
                            >
                                分类
                            </a>
                            :{' '}
                            <a
                                class="hover:text-red-400 cursor-pointer"
                                href={`/category/${entry?.data.category}`}
                            >
                                {entry?.data.category}
                            </a>
                        </p>
                    )
                }
            </div>
            <div>
                {
                    entry &&
                        entry.data &&
                        entry.data.tags &&
                        entry.data.tags.length && (
                            <div class="inline-grid mx-auto grid-flow-col auto-cols-auto gap-x-2 mt-1">
                                {entry.data.tags.map(
                                    (tag: string) => {
                                        return (
                                            <a
                                                href={`/tags/${tag}`}
                                                class="bg-red-400 hover:-translate-y-1 transition-transform px-2 py-1 rounded-lg text-xs"
                                            >
                                                # {tag}
                                            </a>
                                        )
                                    }
                                )}
                            </div>
                        )
                }
            </div>
        </figcaption>
    </figure>
    <div class="p-3 lg:p-6 bg-white rounded-lg max-w-[980px] mx-auto mb-8">
        <article class="markdown-body green">
            <Content />
            <!-- {
                relatedPosts && relatedPosts.length &&
                    relatedPosts.map((p) => <a href={p.slug}>{p.data.title}</a>)
            } -->
        </article>
        {
            relatedPosts && relatedPosts.length && (
                <h2 class="text-2xl my-8">可能喜欢:</h2>
            )
        }
        {
            relatedPosts && relatedPosts.length && (
                <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 auto-cols-auto gap-x-3 gap-y-4 mt-6 mb-6">
                    {relatedPosts &&
                        relatedPosts.length &&
                        relatedPosts
                            .slice(0, 6)
                            .map((blogPostEntry) => (
                                <ArticleCard
                                    articleData={blogPostEntry}
                                    href={`/posts/${blogPostEntry.slug}`}
                                />
                            ))}
                </div>
            )
        }
    </div>
</SinglePage>
